@using CleanArchitecture.Blazor.ViewModels.Game

@page "/game/edit"

@inject NavigationManager Navigation
@inject IGamesClient GamesClient
@inject IGenresClient GenresClient
@inject ILogger<EditGame> Logger


@code
{
    [Inject]
    [SupplyParameterFromForm]
    private EditGameViewModel ViewModel { get; set; }


    #region Parameters

    // [SupplyParameterFromForm()]
    // private int GameId { get; set; }

    #endregion

    #region Overrides

    //Called When Component is ready to start and its parameters was set
    protected override void OnInitialized()
    {
        if(ViewModel.GenresList is null)
        {
            ViewModel.GenresList = GenresClient.GetGameGenres();
        }

        if(ViewModel.UpdatedGame is null)
        {
            //Search For Current Game To can edit it
            //GameId = 1;
            ViewModel.UpdatedGame = GamesClient.FindById(1);
        }
    }

    #endregion

    #region Form Events

    private void HandleEditForm()
    {
        Logger.LogInformation($"(Submitted)=> Id:{ViewModel.UpdatedGame.Id},Name:{ViewModel.UpdatedGame.Name},GenreId:{ViewModel.UpdatedGame.Genre.Id},Price:{ViewModel.UpdatedGame.Price},Year:{ViewModel.UpdatedGame.Year}");

        GamesClient.UpdateGame(ViewModel.UpdatedGame.Id, ViewModel.UpdatedGame.Name, ViewModel.UpdatedGame.Genre.Id, ViewModel.UpdatedGame.Price, ViewModel.UpdatedGame.Year);

        Navigation.NavigateTo("/game/list");
    }

    #endregion

}



<PageTitle>Edit Game Catalog</PageTitle>

<h3>Edit GameCatalog</h3>




<EditForm class="row g-3" Model="@ViewModel" FormName="FormEditGameCatalog" OnValidSubmit="@HandleEditForm" >

    <div class="col-12">
        <label for="txtName" class="form-label">Name</label>
        <InputText id="txtName" @bind-Value="@ViewModel.UpdatedGame!.Name" class="form-control" placeholder="Name"  />
        <ValidationMessage For="@(() => ViewModel.UpdatedGame.Name)" />
    </div>

    <div class="col-md-4">
        <label for="cboGenre" class="form-label">Genre</label>
         <InputSelect id="cboGenre" class="form-select" @bind-Value="@ViewModel.UpdatedGame.Genre.Id">
            <option value="-1" selected>Select...</option>

            @foreach (var genre in ViewModel.GenresList!)
            {
                <option value="@genre.Id">@genre.Name</option>
            }

        </InputSelect> 
        <ValidationMessage For="@(() => ViewModel.UpdatedGame.Genre.Id)" />
    </div>

    <div class="col-md-4">
        <label for="txtPrice" class="form-label">Price</label>
        <InputNumber id="txtPrice" class="form-control" @bind-Value="@ViewModel.UpdatedGame.Price" />
        <ValidationMessage For="@(() => ViewModel.UpdatedGame.Price)" />
    </div>

    <div class="col-md-4">
        <label for="txtYear" class="form-label">Year</label>
        <InputNumber id="txtYear" class="form-control" @bind-Value="@ViewModel.UpdatedGame.Year" />
        <ValidationMessage For="@(() => ViewModel.UpdatedGame.Year)" />
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary" role="button">Save Changes</button>
        <a class="btn btn-secondary" role="button" href="/game/list">Cancel</a>
    </div>

</EditForm>



  