@page "/parameters"
@page "/parameters/{Title?}"
@page "/parameters/{Title?}/{Description?}/"
@page "/parameters/{Price:decimal}"

@code 
{
    private string authMessage = "The user is NOT authenticated.";

    // Inputs Parameters ===========================

    [Parameter]
    public string? Title{ get; set; }

    [Parameter]
    public string? Description { get; set; }

    [Parameter]
    public decimal? Price { get; set; }

    ///parameters?phone=01091281295
    [SupplyParameterFromQuery(Name = "phone")]
    public string? Phone { get; set; }

    // Cascading Inputs Parameters ===========================
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    // Outputs Parameters ===========================

    [Parameter]
    public EventCallback<decimal> OnPriceChanged{ get; set; }

   
    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                authMessage = $"{user.Identity.Name} is authenticated.";
            }
        }
    }

    protected override void OnParametersSet()
    {
        Title = Title ?? "Default Title";
        Description = Description ?? "Default Description";
        Price = Price ?? 0;
    }

    private async Task ChangePriceAsync()
    {
        Price += 100;

        await OnPriceChanged.InvokeAsync(Price.Value);
    }
}

<PageTitle>Parameters</PageTitle>

<h3 id="SpcialElementId">Parameters</h3>

<h6>Title: @Title</h6>
<h6>Description: @Description</h6>
<h6>Price: @Price</h6>
<h6>Phone: @Phone</h6>

<button type="button" class="btn btn-outline-primary" @onclick="()=>ChangePriceAsync()">Change Price</button>

<br />
<br />

<h3>Cascade Auth State</h3>

<p>@authMessage</p>